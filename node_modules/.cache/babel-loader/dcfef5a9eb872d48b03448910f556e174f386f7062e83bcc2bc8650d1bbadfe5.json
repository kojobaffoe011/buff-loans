{"ast":null,"code":"import * as yup from \"yup\";\nexport const LoanSchema = yup.object().shape({\n  name: yup.string().required(\"Name is required\"),\n  loanName: yup.string().oneOf([\"Business Loan\", \"Afrifa Loans\", \"Abanaa Loans\", \"Olale Loans\", \"Car Loan\", \"Home Loan\", \"Buff Loans\", \"Government Loans\", \"Erasmus Loans\", \"Masadh Loans\"], \"Please select a valid option\").required(\"Marriage status is required\"),\n  employment: yup.string().oneOf([\"Employed\", \"Unemployed\", \"Self-Employed\"], \"Please select a valid option\").required(\"Employment status is required\"),\n  annualSalary: yup.string().when(\"employment\", {\n    is: \"Unemployed\",\n    then: yup.string().notRequired(),\n    otherwise: yup.string().required(\"Employer name is required\")\n  }),\n  loanPurpose: yup.string().oneOf([\"Health Care\", \"Big Purchase\", \"Investment\", \"Other\"], \"Please select a valid option\").required(\"Loan Purpose is required\"),\n  customerID: yup.string().min(6, \"6 charaters or more\").required(\"ID Number is required\"),\n  agreeBox: yup.boolean().oneOf([true], \"Please tick checkbox\")\n});","map":{"version":3,"names":["yup","LoanSchema","object","shape","name","string","required","loanName","oneOf","employment","annualSalary","when","is","then","notRequired","otherwise","loanPurpose","customerID","min","agreeBox","boolean"],"sources":["/Users/cybercyber/Documents/projects/afrifanom/client/src/validations/LoanValidation.js"],"sourcesContent":["import * as yup from \"yup\";\n\nexport const LoanSchema = yup.object().shape({\n  name: yup.string().required(\"Name is required\"),\n  loanName: yup\n    .string()\n    .oneOf(\n      [\n        \"Business Loan\",\n        \"Afrifa Loans\",\n        \"Abanaa Loans\",\n        \"Olale Loans\",\n        \"Car Loan\",\n        \"Home Loan\",\n        \"Buff Loans\",\n        \"Government Loans\",\n        \"Erasmus Loans\",\n        \"Masadh Loans\",\n      ],\n      \"Please select a valid option\"\n    )\n    .required(\"Marriage status is required\"),\n  employment: yup\n    .string()\n    .oneOf(\n      [\"Employed\", \"Unemployed\", \"Self-Employed\"],\n      \"Please select a valid option\"\n    )\n    .required(\"Employment status is required\"),\n  annualSalary: yup.string().when(\"employment\", {\n    is: \"Unemployed\",\n    then: yup.string().notRequired(),\n    otherwise: yup.string().required(\"Employer name is required\"),\n  }),\n  loanPurpose: yup\n    .string()\n    .oneOf(\n      [\"Health Care\", \"Big Purchase\", \"Investment\", \"Other\"],\n      \"Please select a valid option\"\n    )\n    .required(\"Loan Purpose is required\"),\n  customerID: yup\n    .string()\n    .min(6, \"6 charaters or more\")\n    .required(\"ID Number is required\"),\n  agreeBox: yup.boolean().oneOf([true], \"Please tick checkbox\"),\n});\n"],"mappings":"AAAA,OAAO,KAAKA,GAAG,MAAM,KAAK;AAE1B,OAAO,MAAMC,UAAU,GAAGD,GAAG,CAACE,MAAM,EAAE,CAACC,KAAK,CAAC;EAC3CC,IAAI,EAAEJ,GAAG,CAACK,MAAM,EAAE,CAACC,QAAQ,CAAC,kBAAkB,CAAC;EAC/CC,QAAQ,EAAEP,GAAG,CACVK,MAAM,EAAE,CACRG,KAAK,CACJ,CACE,eAAe,EACf,cAAc,EACd,cAAc,EACd,aAAa,EACb,UAAU,EACV,WAAW,EACX,YAAY,EACZ,kBAAkB,EAClB,eAAe,EACf,cAAc,CACf,EACD,8BAA8B,CAC/B,CACAF,QAAQ,CAAC,6BAA6B,CAAC;EAC1CG,UAAU,EAAET,GAAG,CACZK,MAAM,EAAE,CACRG,KAAK,CACJ,CAAC,UAAU,EAAE,YAAY,EAAE,eAAe,CAAC,EAC3C,8BAA8B,CAC/B,CACAF,QAAQ,CAAC,+BAA+B,CAAC;EAC5CI,YAAY,EAAEV,GAAG,CAACK,MAAM,EAAE,CAACM,IAAI,CAAC,YAAY,EAAE;IAC5CC,EAAE,EAAE,YAAY;IAChBC,IAAI,EAAEb,GAAG,CAACK,MAAM,EAAE,CAACS,WAAW,EAAE;IAChCC,SAAS,EAAEf,GAAG,CAACK,MAAM,EAAE,CAACC,QAAQ,CAAC,2BAA2B;EAC9D,CAAC,CAAC;EACFU,WAAW,EAAEhB,GAAG,CACbK,MAAM,EAAE,CACRG,KAAK,CACJ,CAAC,aAAa,EAAE,cAAc,EAAE,YAAY,EAAE,OAAO,CAAC,EACtD,8BAA8B,CAC/B,CACAF,QAAQ,CAAC,0BAA0B,CAAC;EACvCW,UAAU,EAAEjB,GAAG,CACZK,MAAM,EAAE,CACRa,GAAG,CAAC,CAAC,EAAE,qBAAqB,CAAC,CAC7BZ,QAAQ,CAAC,uBAAuB,CAAC;EACpCa,QAAQ,EAAEnB,GAAG,CAACoB,OAAO,EAAE,CAACZ,KAAK,CAAC,CAAC,IAAI,CAAC,EAAE,sBAAsB;AAC9D,CAAC,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}