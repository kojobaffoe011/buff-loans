{"ast":null,"code":"import * as yup from \"yup\";\nexport const userSchema = yup.object().shape({\n  name: yup.string().required(\"Name is required\"),\n  marriage: yup.string().oneOf([\"Single\", \"Married\", \"Prefer not to say\"], \"Please select a valid option\").required(\"Marriage status is required\"),\n  employment: yup.string().oneOf([\"Employed\", \"Unemployed\", \"Self-Employed\"], \"Please select a valid option\").required(\"Employment status is required\"),\n  companyName: yup.string().required(\"Company Name is required\"),\n  // dob: yup.string().required(\"Date of Birth is required\"),\n  dob: yup.string().matches(/^(0[1-9]|[12][0-9]|3[01])[/](0[1-9]|1[012])[/](19|20)\\d\\d$/, \"Invalid date format\")\n  // .date()\n  .min(new Date(Date.now() - 18 * 365.25 * 24 * 60 * 60 * 1000), \"You must be at least 18 years old\").required(\"Date of birth is required\"),\n  idType: yup.string().oneOf([\"Passport\", \"NHIS\", \"Driver's License\"], \"Please select a valid option\").required(\"ID type is required\"),\n  idNumber: yup.string().min(6, \"6 charaters or more\").required(\"ID Number is required\"),\n  phone: yup.string().min(10, \"Phone number must be 10 digits\").max(10, \"Phone number must be 10 digits\").required(\"Phone number is required\"),\n  address: yup.string().required(\"Address is required\")\n});","map":{"version":3,"names":["yup","userSchema","object","shape","name","string","required","marriage","oneOf","employment","companyName","dob","matches","min","Date","now","idType","idNumber","phone","max","address"],"sources":["/Users/cybercyber/Documents/projects/afrifanom/client/src/validations/CustomerValidation.js"],"sourcesContent":["import * as yup from \"yup\";\n\nexport const userSchema = yup.object().shape({\n  name: yup.string().required(\"Name is required\"),\n  marriage: yup\n    .string()\n    .oneOf(\n      [\"Single\", \"Married\", \"Prefer not to say\"],\n      \"Please select a valid option\"\n    )\n    .required(\"Marriage status is required\"),\n  employment: yup\n    .string()\n    .oneOf(\n      [\"Employed\", \"Unemployed\", \"Self-Employed\"],\n      \"Please select a valid option\"\n    )\n    .required(\"Employment status is required\"),\n  companyName: yup.string().required(\"Company Name is required\"),\n  // dob: yup.string().required(\"Date of Birth is required\"),\n  dob: yup\n    .string()\n    .matches(\n      /^(0[1-9]|[12][0-9]|3[01])[/](0[1-9]|1[012])[/](19|20)\\d\\d$/,\n      \"Invalid date format\"\n    )\n    // .date()\n    .min(\n      new Date(Date.now() - 18 * 365.25 * 24 * 60 * 60 * 1000),\n      \"You must be at least 18 years old\"\n    )\n    .required(\"Date of birth is required\"),\n\n  idType: yup\n    .string()\n    .oneOf(\n      [\"Passport\", \"NHIS\", \"Driver's License\"],\n      \"Please select a valid option\"\n    )\n    .required(\"ID type is required\"),\n  idNumber: yup\n    .string()\n    .min(6, \"6 charaters or more\")\n    .required(\"ID Number is required\"),\n  phone: yup\n    .string()\n    .min(10, \"Phone number must be 10 digits\")\n    .max(10, \"Phone number must be 10 digits\")\n    .required(\"Phone number is required\"),\n  address: yup.string().required(\"Address is required\"),\n});\n"],"mappings":"AAAA,OAAO,KAAKA,GAAG,MAAM,KAAK;AAE1B,OAAO,MAAMC,UAAU,GAAGD,GAAG,CAACE,MAAM,EAAE,CAACC,KAAK,CAAC;EAC3CC,IAAI,EAAEJ,GAAG,CAACK,MAAM,EAAE,CAACC,QAAQ,CAAC,kBAAkB,CAAC;EAC/CC,QAAQ,EAAEP,GAAG,CACVK,MAAM,EAAE,CACRG,KAAK,CACJ,CAAC,QAAQ,EAAE,SAAS,EAAE,mBAAmB,CAAC,EAC1C,8BAA8B,CAC/B,CACAF,QAAQ,CAAC,6BAA6B,CAAC;EAC1CG,UAAU,EAAET,GAAG,CACZK,MAAM,EAAE,CACRG,KAAK,CACJ,CAAC,UAAU,EAAE,YAAY,EAAE,eAAe,CAAC,EAC3C,8BAA8B,CAC/B,CACAF,QAAQ,CAAC,+BAA+B,CAAC;EAC5CI,WAAW,EAAEV,GAAG,CAACK,MAAM,EAAE,CAACC,QAAQ,CAAC,0BAA0B,CAAC;EAC9D;EACAK,GAAG,EAAEX,GAAG,CACLK,MAAM,EAAE,CACRO,OAAO,CACN,4DAA4D,EAC5D,qBAAqB;EAEvB;EAAA,CACCC,GAAG,CACF,IAAIC,IAAI,CAACA,IAAI,CAACC,GAAG,EAAE,GAAG,EAAE,GAAG,MAAM,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,IAAI,CAAC,EACxD,mCAAmC,CACpC,CACAT,QAAQ,CAAC,2BAA2B,CAAC;EAExCU,MAAM,EAAEhB,GAAG,CACRK,MAAM,EAAE,CACRG,KAAK,CACJ,CAAC,UAAU,EAAE,MAAM,EAAE,kBAAkB,CAAC,EACxC,8BAA8B,CAC/B,CACAF,QAAQ,CAAC,qBAAqB,CAAC;EAClCW,QAAQ,EAAEjB,GAAG,CACVK,MAAM,EAAE,CACRQ,GAAG,CAAC,CAAC,EAAE,qBAAqB,CAAC,CAC7BP,QAAQ,CAAC,uBAAuB,CAAC;EACpCY,KAAK,EAAElB,GAAG,CACPK,MAAM,EAAE,CACRQ,GAAG,CAAC,EAAE,EAAE,gCAAgC,CAAC,CACzCM,GAAG,CAAC,EAAE,EAAE,gCAAgC,CAAC,CACzCb,QAAQ,CAAC,0BAA0B,CAAC;EACvCc,OAAO,EAAEpB,GAAG,CAACK,MAAM,EAAE,CAACC,QAAQ,CAAC,qBAAqB;AACtD,CAAC,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}